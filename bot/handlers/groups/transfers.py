from aiogram import types, html
from aiogram.utils.i18n import gettext
from sqlalchemy.orm import Session

from bot.routers import groups as router
from bot.decorators import create_session
from bot.filters import Text, Chat, ContentType
from db import repository as repo

_ = gettext

@router.message(Chat().is_group(), ContentType(ContentType.TEXT), Text(startswith='!—Ç '))
@create_session
async def transfer_handler(message: types.Message, session: Session):
    text = message.text
    if len(text.split()) == 2:
        try:
            amount = int(text.split()[1])
            to_message = message.reply_to_message
            if to_message:
                to_user = to_message.from_user

                if not to_user.is_bot:
                    if not to_user.id == message.from_user.id:
                        balance = await repo.UsersTableRepository().get_balance(
                            user_id=message.from_user.id, session=session)
                        transfer = await repo.TransfersTableRepository().create_transfer(
                            from_user_id=message.from_user.id,
                            to_user_id=to_user.id,
                            chat_id=message.chat.id,
                            amount=amount,
                            session=session)
                        
                        if transfer['success']:
                            await message.reply(html.bold(
                                _("–¢—Ä–∞–Ω—Å—Ñ–µ—Ä –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ.") + "\n" + _("–¢–µ–∫—É—â–∏–π –ª–∏–º–∏—Ç: ") + f"{transfer['transfer']}"))
                        else:
                            if transfer['error'] == "Not enough money!":
                                await message.reply(html.bold(
                                     _("–í–∞—à –±–∞–ª–∞–Ω—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω! –í –±–∞–ª–∞–Ω—Å–µ: ") + f"{balance} üí∞"
                                ))
                            elif transfer['error'] == "Limit is full":
                                await message.reply(html.bold(
                                    _("–°—É–º–º–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç. –î–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É !–ª–∏–º–∏—Ç –±–æ—Ç—É!")
                                ))
                    else:
                        await message.reply(html.bold(
                            _("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ —Å–µ–±–µ ‚ùå")))
                else:
                    await message.reply(html.bold(
                        _("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –±–æ—Ç—É ‚ùå")))
        
        except ValueError:
            await message.reply(html.bold(_("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω—É—é —Å—É–º–º—É ‚ùå")))